spring.application.name=flashcards-backend
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# mount docker secrets - now they are available as ${secret_name}
spring.config.import=optional:configtree:/run/secrets/

spring.datasource.url=jdbc:mysql://mysql_database:3306/my_database

#spring.datasource.username=here_insert_user_login
#spring.datasource.password=here_insert_db_password
spring.datasource.username=${db_user_login:springstudent}
spring.datasource.password=${db_user_password:springstudent}

spring.data.jdbc.dialect=mysql

# check if database schema is relevant to the entities
spring.jpa.hibernate.ddl-auto=validate
# avoid errors with jpa changing table names declared in @Table annotation
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.security.user.password=${spring_security_user_password:default_for_testing_outside_docker}
spring.security.user.name=${spring_security_user_username:default_for_testing_outside_docker}

# oauth2 configurations
spring.security.oauth2.client.registration.github.client-id=${github_client_id:default_for_testing_outside_docker}
spring.security.oauth2.client.registration.github.client-secret=${github_client_secret:default_for_testing_outside_docker}

spring.security.oauth2.client.registration.google.client-id=${google_client_id:default_for_testing_outside_docker}
spring.security.oauth2.client.registration.google.client-secret=${google_client_secret:default_for_testing_outside_docker}

# jwt configurations
jwt.secret-key=${jwt_secret_key:default_for_testing_outside_docker_and_this_is_very_long_key}
jwt.token-valid-time=${JWT_TOKEN_VALID_TIME:3600000}

# sql logs for testsing
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${email_email:default_for_testing_outside_docker}
spring.mail.password=${email_password:default_for_testing_outside_docker}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# email verification code validity duration in minutes
verification-code.length=10
verification-code.expiration-minutes=10

# parameters for scheduling algorithm
scheduling.max_flashcard_learning = 20
scheduling.learning_ratio = 0.7
scheduling.multiplier.easy = 2.0
scheduling.multiplier.good = 1.5
scheduling.multiplier.hard = 1.0

# in minutes
scheduling.review_gap_const = 10
scheduling.last_review_constant = 10

# links
links.verify-user=http://localhost:80/verify-email/

#multi threading configuration
thread.queue.capacity = 500
thread.core.pool.size = 2
thread.max.pool.size = 2